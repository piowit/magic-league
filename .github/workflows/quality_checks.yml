name: Quality Checks

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

env:
  RAILS_ENV: test
  POSTGRES_PASSWORD: postgres

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:13.7-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # Needed by pronto
      - run: |
          git fetch --no-tags --prune origin +refs/heads/*:refs/remotes/origin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        timeout-minutes: 10
        with:
          bundler-cache: true

      - name: Install PostgreSQL client
        run: sudo apt-get install libpq-dev

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Setup test database
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: ${{env.POSTGRES_PASSWORD}}
        run: |
          bin/rails db:create db:schema:load:with_data db:migrate:with_data

      - name: Cache assets
        uses: actions/cache@v3
        with:
          path: |
            public/assets
            public/packs-test
            tmp/cache/assets/sprockets
            tmp/cache/webpacker/last-compilation-digest-test
          key: assets-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            assets-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            assets-${{ runner.os }}-${{ github.ref }}-
            assets-${{ runner.os }}-

      - name: Precompile assets
        run: bundle exec rails assets:precompile --trace

      - name: Run Tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: ${{env.POSTGRES_PASSWORD}}
        run: |
          bundle exec rspec

      - name: Display logs when test fails
        run: cat log/test.log
        if: failure()

      - name: Archive capybara failure screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: tmp/screenshots/

  seed-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:13.7-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      timeout-minutes: 10
      with:
        bundler-cache: true

    - name: Install PostgreSQL client
      run: sudo apt-get install libpq-dev

    - name: Setup test database
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: ${{env.POSTGRES_PASSWORD}}
      run: |
        bin/rails db:create db:schema:load:with_data db:migrate:with_data

    - name: Run Seeds
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: ${{env.POSTGRES_PASSWORD}}
      run: |
        bundle exec rails db:seed
